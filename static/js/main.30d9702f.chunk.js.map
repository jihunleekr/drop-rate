{"version":3,"sources":["Helper.ts","RateChart.tsx","Item.tsx","NewItem.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["calculateTrials","dropRate","targetRate","Math","ceil","log","RateChart","rate","trials","useState","rateData","setRateData","targetData","setTargetData","currentData","setCurrentData","useEffect","data","failure","maxTrials","targetTrials","stackedFailureRate","i","p","x","y","push","height","yDomain","tickFormat","v","title","opacity","useStyles","makeStyles","theme","createStyles","root","margin","maxWidth","paper","marginBottom","padding","summary","display","input","width","background","borderTopLeftRadius","borderBottomLeftRadius","borderRight","paddingLeft","paddingRight","heading","flex","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","hint","secondary","dark","fontWeight","chart","actions","action","textAlign","Item","item","onUpdate","onDelete","classes","expanded","setExpanded","Accordion","onChange","event","AccordionSummary","expandIcon","className","Typography","name","pow","toLocaleString","undefined","style","minimumFractionDigits","InputBase","value","trialsPerClick","inputProps","align","target","endAdornment","InputAdornment","position","Button","variant","onClick","parseInt","breakpoints","values","sm","form","justifyContent","textField","NewItem","onAddItem","setName","percent","setPercent","Paper","noValidate","autoComplete","TextField","label","InputProps","parseFloat","list","App","items","setItems","updateItem","index","stagedItems","deleteItem","splice","prevItems","length","map","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30d9702f.chunk.js","sourcesContent":["import { log } from \"mathjs\";\n\nexport function calculateTrials(dropRate: number, targetRate: number) {\n  return Math.ceil(log(1 - targetRate, 1 - dropRate));\n}\n\nexport function calculateRate(dropRate: number, trials: number) {\n  return 1 - Math.pow(1 - dropRate, trials);\n}\n\nexport function formatPercent(value: number) {\n  return value.toLocaleString(undefined, { style: \"percent\", minimumFractionDigits: 1 });\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n    FlexibleWidthXYPlot, HorizontalGridLines, LineSeries, MarkSeries, VerticalGridLines, XAxis,\n    YAxis\n} from \"react-vis\";\n\nimport { calculateTrials } from \"./Helper\";\n\ninterface RateChartProps {\n  rate: number;\n  trials: number;\n}\n\nconst RateChart: React.FC<RateChartProps> = ({ rate, trials }) => {\n  const [rateData, setRateData] = useState<{ x: number; y: number }[]>([]);\n  const [targetData, setTargetData] = useState<{ x: number; y: number }[]>([]);\n  const [currentData, setCurrentData] = useState<{ x: number; y: number }[]>([]);\n\n  useEffect(() => {\n    if (rate) {\n      const data = [];\n      const failure = 1 - rate;\n      const maxTrials = calculateTrials(rate, 0.99);\n      const targetTrials = calculateTrials(rate, 0.9);\n      var stackedFailureRate = 1.0;\n      for (let i = 0; i < maxTrials; i++) {\n        stackedFailureRate = stackedFailureRate * failure;\n        const p = { x: i, y: (1 - stackedFailureRate) * 100 };\n        data.push(p);\n\n        if (i === targetTrials) {\n          setTargetData([p]);\n        }\n\n        if (i === trials) {\n          setCurrentData([p]);\n        }\n      }\n      setRateData(data);\n    }\n  }, [rate, trials]);\n\n  return (\n    <div>\n      <FlexibleWidthXYPlot height={300} yDomain={[0, 100]}>\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis tickFormat={v => `${v}회`} title=\"시도횟수\" />\n        <YAxis tickFormat={v => `${v}%`} title=\"누적확률\" />\n        <LineSeries data={rateData} opacity={0.5} />\n        <MarkSeries data={targetData} />\n        <MarkSeries data={currentData} />\n      </FlexibleWidthXYPlot>\n    </div>\n  );\n};\n\nexport default RateChart;\n","import React, { useState } from \"react\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Button from \"@material-ui/core/Button\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport { calculateRate, formatPercent } from \"./Helper\";\nimport RateChart from \"./RateChart\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: \"0 auto\",\n      maxWidth: 600\n    },\n    paper: {\n      marginBottom: \"1rem\",\n      padding: \"1rem\"\n    },\n    summary: {\n      display: \"flex\"\n    },\n    input: {\n      width: \"6rem\",\n      background: \"rgba(0,0,0,0.09)\",\n      borderTopLeftRadius: \"4px\",\n      borderBottomLeftRadius: \"4px\",\n      borderRight: \"0\",\n      paddingLeft: \"1rem\",\n      paddingRight: \"1rem\"\n    },\n    heading: {\n      flex: 1,\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      flex: 1,\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.hint,\n      \"& b\": {\n        color: theme.palette.secondary.dark,\n        fontWeight: \"normal\"\n      }\n    },\n    chart: {\n      margin: \"1rem\"\n    },\n    actions: {\n      display: \"flex\",\n      margin: \"1rem\"\n    },\n    action: {\n      flex: 1,\n      \"&:last-child\": {\n        textAlign: \"right\"\n      }\n    }\n  })\n);\n\nexport interface ItemInterface {\n  name: string;\n  dropRate: number;\n  trials: number;\n  trialsPerClick: string;\n}\n\ninterface Props {\n  item: ItemInterface;\n  onUpdate: (item: ItemInterface) => void;\n  onDelete: () => void;\n}\n\nconst Item: React.FC<Props> = ({ item, onUpdate, onDelete }) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  const handleChange = (event: React.ChangeEvent<{}>, expanded: boolean) => {\n    setExpanded(expanded);\n  };\n\n  const handleTrialClick = (event: React.MouseEvent) => {\n    onUpdate({ ...item, trials: item.trials + parseInt(item.trialsPerClick) });\n  };\n\n  const handleTrialsPerClickChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ ...item, trialsPerClick: event.target.value });\n  };\n\n  const handleDeleteClick = (event: React.MouseEvent) => {\n    onDelete();\n  };\n\n  return (\n    <Accordion expanded={expanded} onChange={handleChange}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n        <Typography className={classes.heading}>{item.name}</Typography>\n        <div className={classes.secondaryHeading}>\n          {item.trials + 1}회차 확률: <b>{formatPercent(calculateRate(item.dropRate, item.trials + 1))}</b>\n        </div>\n      </AccordionSummary>\n      <div className={classes.chart}>\n        <RateChart rate={item.dropRate} trials={item.trials} />\n      </div>\n      <div className={classes.actions}>\n        <div className={classes.action}>\n          <InputBase\n            className={classes.input}\n            value={item.trialsPerClick}\n            inputProps={{ align: \"right\", style: { textAlign: \"right\" } }}\n            onChange={handleTrialsPerClickChange}\n            endAdornment={<InputAdornment position=\"end\">회</InputAdornment>}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={handleTrialClick}>\n            더하기\n          </Button>\n        </div>\n        <div className={classes.action}>\n          <Button variant=\"text\" color=\"default\" onClick={handleDeleteClick}>\n            <DeleteIcon />\n          </Button>\n        </div>\n      </div>\n    </Accordion>\n  );\n};\n\nexport default Item;\n","import React, { useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { ItemInterface } from \"./Item\";\nimport RateChart from \"./RateChart\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: \"0 auto\",\n      maxWidth: theme.breakpoints.values.sm\n    },\n    paper: {\n      marginBottom: \"1rem\",\n      padding: \"1rem\"\n    },\n    form: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    textField: {}\n  })\n);\n\ninterface Props {\n  onAddItem: (item: ItemInterface) => void;\n}\n\nconst NewItem: React.FC<Props> = ({ onAddItem }) => {\n  const classes = useStyles();\n  const [name, setName] = useState<string>(\"\");\n  const [percent, setPercent] = useState<string>(\"\");\n\n  const handleItemChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const v = event.target.value;\n    setName(v);\n  };\n\n  const handlePercentChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // TODO: 입력체크(0 < x < 100) 인지\n    const v = event.target.value;\n    setPercent(v);\n  };\n\n  const handleAddClick = () => {\n    onAddItem({\n      name: name,\n      dropRate: parseInt(percent) / 100,\n      trials: 0,\n      trialsPerClick: \"1\"\n    });\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form noValidate autoComplete=\"off\" className={classes.form}>\n        <TextField\n          className={classes.textField}\n          label=\"아이템명\"\n          onChange={handleItemChange}\n          value={name}\n          variant=\"standard\"\n        />\n        <TextField\n          className={classes.textField}\n          label=\"드랍율\"\n          onChange={handlePercentChange}\n          value={percent}\n          variant=\"filled\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>\n          }}\n        />\n      </form>\n      <RateChart rate={parseFloat(percent) / 100} trials={0} />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddClick}>\n        수집 목록에 추가\n      </Button>\n    </Paper>\n  );\n};\n\nexport default NewItem;\n","import \"./App.css\";\nimport \"../node_modules/react-vis/dist/style.css\";\n\nimport React, { useState } from \"react\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport Item, { ItemInterface } from \"./Item\";\nimport NewItem from \"./NewItem\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: \"0 auto\",\n      maxWidth: 600\n    },\n    list: {\n      marginBottom: \"2rem\"\n    }\n  })\n);\n\nfunction App() {\n  const classes = useStyles();\n  const [items, setItems] = useState<ItemInterface[]>([]);\n\n  const addItem = (item: any) => {\n    setItems(prevItems => [{ name: item.name, dropRate: item.dropRate, trials: 0, trialsPerClick: \"1\" }, ...prevItems]);\n  };\n\n  const updateItem = (index: number) => (item: ItemInterface) => {\n    const stagedItems = [...items];\n    stagedItems[index] = item;\n    setItems(stagedItems);\n  };\n\n  const deleteItem = (index: number) => () => {\n    const stagedItems = [...items];\n    stagedItems.splice(index, 1);\n    setItems(stagedItems);\n  };\n\n  return (\n    <div className={classes.root}>\n      <h1>DROPRATE</h1>\n\n      <NewItem onAddItem={addItem} />\n\n      {items.length > 0 && (\n        <>\n          <h2>수집 목록</h2>\n          <div className={classes.list}>\n            {items.map((item, index) => {\n              return <Item item={item} key={index} onUpdate={updateItem(index)} onDelete={deleteItem(index)} />;\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}